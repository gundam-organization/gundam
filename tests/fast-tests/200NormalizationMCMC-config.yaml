# A test yaml file for GUNDAM.
#
# Do a data fit to the tree_dt tree in 100NormalizationTree.root.  This
# fits the (A,B) distribution with two free normalization variables.
#
#   Positive_C : Normalization for events where the C truth variable is >0
#   Negative_C : Normalization for events where the C truth variable is <=0
#

fit: true                    # can be disabled with -d
scanParameters: false        # can be triggered with --scan
generateOneSigmaPlots: false # can be enabled with --one-sigma

fitterEngineConfig:

  minimizerConfig:
    type: SimpleMcmc
    algorithm: metropolis
    proposal: adaptive
    adaptiveRestore: none

    cycles: 4
    steps: 10000
    acceptanceWindow: 400
    covarianceWindow: 100000
    covarianceDeweighting: 0.0
    sequence: |
      for (int chain = 0; chain < gMCMC.Cycles(); ++chain) {
        gMCMC.FreezeStep((chain > 1));
        gMCMC.FreezeCovariance((chain > 2));
        gMCMC.RunCycle("Chain",chain);
      }
      
    burninCycles: 4
    saveBurnin: false
    burninSequence: |
      for (int chain = 0; chain < gMCMC.Burnin(); ++chain) {
        gMCMC.Steps(1000);
        gMCMC.AcceptanceWindow(100);
        gMCMC.CovarianceWindow(10000);
        gMCMC.CovarianceDeweighting(0.5);
        gMCMC.FreezeStep((chain > 2));
        gMCMC.FreezeCovariance(false);
        gMCMC.ResetCovariance((chain < 2));
        gMCMC.RunCycle("Burn-in",chain);
      }

  propagatorConfig:
    throwAsimovFitParameters: false

    dataSetList:
      - name: "TestSample"
        isEnabled: true
        selectedDataEntry: "TestData"
        mc:
          tree: tree_mc
          selectionCutFormula: "(1)"
          nominalWeightFormula: "(1.0)"
          filePathList:
            - "${DATA_DIR}/100NormalizationTree.root"
        data:
          - name: "TestData"
            tree: tree_dt
            filePathList:
              - "${DATA_DIR}/100NormalizationTree.root"


    fitSampleSetConfig:
      # LeastSquares is used for tests because it is mathematically simple
      # and numerically stable.
      llhStatFunction: LeastSquares
      dataEventType: TestData

      llhConfig:
        lsqPoissonianApproximation: true

      fitSampleList:
        - name: AB
          isEnabled: true
          binning: "${CONFIG_DIR}/200NormalizationMCMC-binning.txt"
          dataSets: [ "TestSample" ]

    parameterSetListConfig:
      - name: Normalizations
        isEnabled: true
        nominalStepSize: 0.1

        parameterDefinitions:

          - parameterName: "Positive_C"
            isEnabled: true
            priorValue: 1.0
            priorType: Flat
            dialSetDefinitions:
              - dialsType: Normalization
                applyCondition: "[C] > 0"

          - parameterName: "Negative_C"
            isEnabled: true
            priorValue: 1.0
            priorType: Flat
            dialSetDefinitions:
              - dialsType: Normalization
                applyCondition: "[C] <= 0"

# End of the yaml file
# Local Variables:
# mode:yaml
# End:
